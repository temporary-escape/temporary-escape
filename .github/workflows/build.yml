name: build
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Build - Windows'
            os: windows-latest
            config: 'Release'
            cpack: 'ZIP'
            configurePreset: 'msbuild'
            buildPreset: 'msbuild - msbuild'
            vcpkgCommitId: 'f14984af3738e69f197bf0e647a8dca12de92996'
          - name: 'Build - Linux'
            os: ubuntu-latest
            config: 'Release'
            cpack: 'TGZ'
            configurePreset: 'ninja'
            buildPreset: 'ninja - ninja'
            vcpkgCommitId: 'f14984af3738e69f197bf0e647a8dca12de92996'
    #      - name: 'Build - Mac OSX'
    #        os: macos-latest
    #        config: 'Release'
    #        cpack: 'ZIP'
    #        configurePreset: 'ninja'
    #        buildPreset: 'ninja - ninja'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Dependencies
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -y \
              ninja-build clang llvm libxinerama-dev libxcursor-dev xorg-dev \
              libglu1-mesa-dev libc6-dev linux-libc-dev
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install ninja llvm
          fi

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.216.0
          vulkan-components: Vulkan-Headers
          vulkan-use-cache: true

      - uses: lukka/get-cmake@v3.21.2

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v10.3
        with:
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgJsonGlob: '${{ github.workspace }}/vcpkg.json'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'

      - name: Configure
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: '${{ github.configurePreset }}'
          configurePresetAdditionalArgs: "[ '-DCMAKE_BUILD_TYPE=${{ matrix.config }}' ]"

      - name: Build
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          buildPreset: '${{ github.buildPreset }}'
          buildPresetAdditionalArgs: "[ '--config ${{ matrix.config }}' ]"

#      - name: Run Tests
#        shell: bash
#        run: |
#          cd build
#          ctest -C ${{ matrix.config }} --verbose --output-on-failure 2>&1 | tee ctest.log

#      - name: Package
#        if: matrix.asan == 'false'
#        shell: bash
#        run: |
#          cd build
#          cpack -G ${{ matrix.cpack }} -C ${{ matrix.config }}
